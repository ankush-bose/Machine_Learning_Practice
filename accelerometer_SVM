

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


#Importing dataset  
dataset=pd.read_csv('1.csv')
s=dataset.isnull().values.any()
print(s)
X=dataset.iloc[:,1:4].values
y=dataset.iloc[:,4].values



# Taking care of missing elements
 #from sklearn.preprocessing import Imputer
 #imputer=Imputer(missing_values='NaN',strategy='mean',axis=0)
 #imputer=Imputer.fit(X[:,:32])
 #X[:,:32]=imputer.transform(X[:,:32])



#Spliting the dataset int training and testing set
from sklearn.cross_validation import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)

#feature scaling 
from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_train=sc.fit_transform(X_train)
X_test=sc.transform(X_test)


#Fitting SVM to training set
from sklearn.svm import SVC
#classifier=SVC(kernel='linear',random_state=0)
#classifier=SVC(C=1.0,kernel='rbf',random_state=0)
#classifier=SVC(C=1.0,kernel='poly',random_state=0)
classifier=SVC(kernel='sigmoid',random_state=0)
classifier.fit(X_train,y_train)

#PRedicting the test set resilts
y_pred=classifier.predict(X_test)
classifier.score(X_test,y_test)

#Making th econfusion Matrix
from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test,y_pred)
